{"version":3,"sources":["components/Navbar.js","components/Tweet.js","components/ErrorMessage.js","components/Spinner.js","components/TweetFeed.js","components/Rule.js","components/RuleList.js","components/App.js","index.js"],"names":["Navbar","className","to","target","Tweet","id","json","data","options","cards","align","width","conversation","tweetId","ErrorMessage","error","styleType","title","details","map","detail","key","type","href","rel","errorType","Spinner","src","alt","reducer","state","action","tweets","payload","isWaiting","errors","TweetFeed","useReducer","dispatch","useEffect","socket","socketIOClient","on","console","log","streamTweets","message","reconnectMessage","length","errorMessage","Fragment","waitingMessage","tweet","showTweets","Rule","onRuleDelete","value","tag","onClick","rules","newRule","filter","rule","isLoading","RuleList","createRule","e","a","preventDefault","add","axios","post","response","body","deleteRule","delete","ids","get","onSubmit","autoFocus","onChange","App","exact","path","component","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a30cd158.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"ui two item menu\">\n      <NavLink to=\"/tweets\" className=\"item\" target=\"_blank\">\n        New Tweets\n      </NavLink>\n      <NavLink to=\"/rules\" className=\"item\" target=\"_blank\">\n        Manage Rules\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { TwitterTweetEmbed } from \"react-twitter-embed\";\n\nconst Tweet = ({ json }) => {\n  const { id } = json.data;\n\n  const options = {\n    cards: \"hidden\",\n    align: \"center\",\n    width: \"550\",\n    conversation: \"none\",\n  };\n\n  return <TwitterTweetEmbed options={options} tweetId={id} />;\n};\n\nexport default Tweet;\n","import React from \"react\";\n\nconst ErrorMessage = ({ error, styleType }) => {\n  const errorDetails = () => {\n    if (error.details) {\n      return error.details.map(detail => <p key={detail}>{detail}</p>);\n    } else if (error.detail) {\n      return <p key={error.detail}>{error.detail}</p>;\n    }\n  };\n\n  const errorType = () => {\n    if (error.type) {\n      return (\n        <em>\n          See\n          <a href={error.type} target=\"_blank\" rel=\"noopener noreferrer\">\n            {\" \"}\n            Twitter documentation{\" \"}\n          </a>\n          for further details.\n        </em>\n      );\n    }\n  };\n\n  return (\n    <div className={`ui message ${styleType}`}>\n      <div className=\"header\">{error.title}</div>\n      {errorDetails()}\n      {errorType()}\n    </div>\n  );\n};\n\nexport default ErrorMessage;\n","import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div>\n      <div className=\"ui active centered large inline loader\">\n        <img\n          className=\"ui image\"\n          src=\"/Twitter_Logo_Blue.png\"\n          alt=\"Twitter Logo\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useEffect, useReducer } from \"react\";\nimport Tweet from \"./Tweet\";\nimport socketIOClient from \"socket.io-client\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport Spinner from \"./Spinner\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"add_tweet\":\n      return {\n        ...state,\n        tweets: [action.payload, ...state.tweets],\n        error: null,\n        isWaiting: false,\n        errors: [],\n      };\n    case \"show_error\":\n      return { ...state, error: action.payload, isWaiting: false };\n    case \"add_errors\":\n      return { ...state, errors: action.payload, isWaiting: false };\n    case \"update_waiting\":\n      return { ...state, error: null, isWaiting: true };\n    default:\n      return state;\n  }\n};\n\nconst TweetFeed = () => {\n  const initialState = {\n    tweets: [],\n    error: {},\n    isWaiting: true,\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { tweets, error, isWaiting } = state;\n\n  const streamTweets = () => {\n    let socket;\n\n    if (process.env.NODE_ENV === \"development\") {\n      socket = socketIOClient(\"http://localhost:3001/\");\n    } else {\n      socket = socketIOClient(\"/\");\n    }\n\n    socket.on(\"connect\", () => {});\n    socket.on(\"tweet\", (json) => {\n      if (json.data) {\n        dispatch({ type: \"add_tweet\", payload: json });\n      }\n    });\n    socket.on(\"heartbeat\", (data) => {\n      dispatch({ type: \"update_waiting\" });\n    });\n    socket.on(\"error\", (data) => {\n      dispatch({ type: \"show_error\", payload: data });\n    });\n    socket.on(\"authError\", (data) => {\n      console.log(\"data =>\", data);\n      dispatch({ type: \"add_errors\", payload: [data] });\n    });\n  };\n\n  const reconnectMessage = () => {\n    const message = {\n      title: \"Reconnecting\",\n      detail: \"Please wait while we reconnect to the stream.\",\n    };\n\n    if (error && error.detail) {\n      return (\n        <div>\n          <ErrorMessage key={error.title} error={error} styleType=\"warning\" />\n          <ErrorMessage\n            key={message.title}\n            error={message}\n            styleType=\"success\"\n          />\n          <Spinner />\n        </div>\n      );\n    }\n  };\n\n  const errorMessage = () => {\n    const { errors } = state;\n\n    if (errors && errors.length > 0) {\n      return errors.map((error) => (\n        <ErrorMessage key={error.title} error={error} styleType=\"negative\" />\n      ));\n    }\n  };\n\n  const waitingMessage = () => {\n    const message = {\n      title: \"Still working\",\n      detail: \"Waiting for new Tweets to be posted\",\n    };\n\n    if (isWaiting) {\n      return (\n        <React.Fragment>\n          <div>\n            <ErrorMessage\n              key={message.title}\n              error={message}\n              styleType=\"success\"\n            />\n          </div>\n          <Spinner />\n        </React.Fragment>\n      );\n    }\n  };\n\n  useEffect(() => {\n    streamTweets();\n  }, []);\n\n  const showTweets = () => {\n    if (tweets.length > 0) {\n      return (\n        <React.Fragment>\n          {tweets.map((tweet) => (\n            <Tweet key={tweet.data.id} json={tweet} />\n          ))}\n        </React.Fragment>\n      );\n    }\n  };\n\n  return (\n    <div>\n      {reconnectMessage()}\n      {errorMessage()}\n      {waitingMessage()}\n      {showTweets()}\n    </div>\n  );\n};\n\nexport default TweetFeed;\n","import React from \"react\";\n\nexport const Rule = ({ data, onRuleDelete }) => {\n  return (\n    <div className=\"ui segment\">\n      <p>{data.value}</p>\n      <div className=\"ui label\">tag:#dog {data.tag}</div>\n      <button\n        className=\"ui right floated negative button\"\n        onClick={() => onRuleDelete(data.id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default Rule;\n","import React, { useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport Rule from \"./Rule\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport Spinner from \"./Spinner\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"show_rules\":\n      return { ...state, rules: action.payload, newRule: \"\" };\n    case \"add_rule\":\n      return {\n        ...state,\n        rules: [...state.rules, ...action.payload],\n        newRule: \"\",\n        errors: [],\n      };\n    case \"add_errors\":\n      return { ...state, rules: state.rules, errors: action.payload };\n    case \"delete_rule\":\n      return {\n        ...state,\n        rules: [...state.rules.filter((rule) => rule.id !== action.payload)],\n      };\n    case \"rule_changed\":\n      return { ...state, newRule: action.payload };\n    case \"change_loading_status\":\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst RuleList = () => {\n  const initialState = { rules: [], newRule: \"\", isLoading: false, errors: [] };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const exampleRule = \"from:twitterdev has:links\";\n  const ruleMeaning = `This example rule will match Tweets posted by \n     TwtterDev containing links`;\n  const operatorsURL =\n    \"/content/developer-twitter/en/docs/labs/filtered-stream/operators\";\n  const rulesURL = \"/api/rules\";\n\n  const createRule = async (e) => {\n    e.preventDefault();\n    const payload = { add: [{ value: state.newRule }] };\n\n    dispatch({ type: \"change_loading_status\", payload: true });\n    try {\n      const response = await axios.post(rulesURL, payload);\n      if (response.data.body.errors)\n        dispatch({ type: \"add_errors\", payload: response.data.body.errors });\n      else {\n        dispatch({ type: \"add_rule\", payload: response.data.body.data });\n      }\n      dispatch({ type: \"change_loading_status\", payload: false });\n    } catch (e) {\n      dispatch({\n        type: \"add_errors\",\n        payload: [{ detail: e.message }],\n      });\n      dispatch({ type: \"change_loading_status\", payload: false });\n    }\n  };\n\n  const deleteRule = async (id) => {\n    const payload = { delete: { ids: [id] } };\n    dispatch({ type: \"change_loading_status\", payload: true });\n    await axios.post(rulesURL, payload);\n    dispatch({ type: \"delete_rule\", payload: id });\n    dispatch({ type: \"change_loading_status\", payload: false });\n  };\n\n  const errors = () => {\n    const { errors } = state;\n\n    if (errors && errors.length > 0) {\n      return errors.map((error) => (\n        <ErrorMessage key={error.title} error={error} styleType=\"negative\" />\n      ));\n    }\n  };\n\n  const rules = () => {\n    const { isLoading, rules } = state;\n\n    const message = {\n      title: \"Hastag selected:\",\n      details: [\n        `There are currently no rules on this stream. Start by adding the rule \n        below.`,\n        exampleRule,\n        ruleMeaning,\n      ],\n      type: operatorsURL,\n    };\n\n    if (!isLoading) {\n      if (rules && rules.length > 0) {\n        return rules.map((rule) => (\n          <Rule\n            key={rule.id}\n            data={rule}\n            onRuleDelete={(id) => deleteRule(id)}\n          />\n        ));\n      } else {\n        return (\n          <ErrorMessage\n            key={message.title}\n            error={message}\n            styleType=\"warning\"\n          />\n        );\n      }\n    } else {\n      return <Spinner />;\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      dispatch({ type: \"change_loading_status\", payload: true });\n\n      try {\n        const response = await axios.get(rulesURL);\n        const { data: payload = [] } = response.data.body;\n        dispatch({\n          type: \"show_rules\",\n          payload,\n        });\n      } catch (e) {\n        dispatch({ type: \"add_errors\", payload: [e.response.data] });\n      }\n\n      dispatch({ type: \"change_loading_status\", payload: false });\n    })();\n  }, []);\n\n  return (\n    <div>\n      <form onSubmit={(e) => createRule(e)}>\n        <div className=\"ui fluid action input\">\n          <input\n            type=\"text\"\n            autoFocus={true}\n            value={state.newRule}\n            onChange={(e) =>\n              dispatch({ type: \"rule_changed\", payload: e.target.value })\n            }\n          />\n          <button type=\"submit\" className=\"ui primary button\">\n            Add Rule\n          </button>\n        </div>\n        {errors()}\n        {rules()}\n      </form>\n    </div>\n  );\n};\n\nexport default RuleList;","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport Navbar from \"./Navbar\";\nimport TweetFeed from \"./TweetFeed\";\nimport RuleList from \"./RuleList\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"ui container\">\n        <div className=\"introduction\"></div>\n\n        <h1 className=\"ui header\">\n          <img\n            className=\"ui image\"\n            src=\"../logo.jpg\"\n            alt=\"logo\"\n          />\n          <div className=\"content\">\n            Hashtrack App\n            <div className=\"sub header\">your app to follow your prefered hastags</div>\n          </div>\n        </h1>\n\n        <div className=\"ui container\">\n          <BrowserRouter>\n            <Navbar />\n            <Route exact path=\"/\" component={RuleList} />\n            <Route exact path=\"/rules\" component={RuleList} />\n            <Route exact path=\"/tweets\" component={TweetFeed} />\n          </BrowserRouter>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}